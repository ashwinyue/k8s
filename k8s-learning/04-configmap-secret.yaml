# ConfigMap 示例 - 存储配置数据
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  # 键值对配置
  database_url: "mysql://localhost:3306/myapp"
  log_level: "info"
  max_connections: "100"
  # 配置文件内容
  app.properties: |
    server.port=8080
    server.host=0.0.0.0
    debug=false
---
# Secret 示例 - 存储敏感数据
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
type: Opaque
data:
  # 注意：这些值需要 base64 编码
  # 原始值: username=admin, password=secret123
  username: YWRtaW4=  # admin 的 base64 编码
  password: c2VjcmV0MTIz  # secret123 的 base64 编码
---
# 使用 ConfigMap 和 Secret 的 Pod
apiVersion: v1
kind: Pod
metadata:
  name: app-pod
spec:
  containers:
  - name: app
    image: nginx:1.20
    env:
    # 从 ConfigMap 获取环境变量
    - name: DATABASE_URL
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: database_url
    - name: LOG_LEVEL
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: log_level
    # 从 Secret 获取环境变量
    - name: USERNAME
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: username
    - name: PASSWORD
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: password
    volumeMounts:
    # 挂载 ConfigMap 作为文件
    - name: config-volume
      mountPath: /etc/config
    # 挂载 Secret 作为文件
    - name: secret-volume
      mountPath: /etc/secrets
      readOnly: true
  volumes:
  - name: config-volume
    configMap:
      name: app-config
  - name: secret-volume
    secret:
      secretName: app-secret
---
# 使用说明：
# 1. 创建 base64 编码：echo -n "your-value" | base64
# 2. 应用资源：kubectl apply -f 04-configmap-secret.yaml
# 3. 查看 ConfigMap：kubectl get configmaps
# 4. 查看 ConfigMap 详情：kubectl describe configmap app-config
# 5. 查看 Secret：kubectl get secrets
# 6. 查看 Secret 详情：kubectl describe secret app-secret
# 7. 进入 Pod 查看环境变量：kubectl exec -it app-pod -- env
# 8. 查看挂载的配置文件：kubectl exec -it app-pod -- ls /etc/config
# 9. 删除资源：kubectl delete -f 04-configmap-secret.yaml